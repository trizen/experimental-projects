#!/usr/bin/ruby

# Least number k such that (10^k-1)/3 has exactly n distinct prime factors.

# Cf. A002277.

# Known terms:
#   1, 2, 4, 13, 6, 15, 12, 18, 28, 24, 36, 32, 30, 42, 78, 64, 72, 100, 128, 60, 84, 96, 150, 126, 160, 120, 204, 315, 168, 192, 306, 180, 210, 240, 252, 330

# This sequence provides upper-bounds for A360301:
#   A360301(n) <= (10^a(n)-1)/3.

# Lower-bounds:
#   a(37) > 352.

include("../../../factordb/auto.sf")

Num!VERBOSE = true

func a(n) {

    for k in (1..Inf) {
        var t = ((10**k - 1)/3)
        if (try { omega(t) == n } catch { t.is_omega_prime(n) }) {
            return k
        }
    }
}

for n in (37..100) {
    say "#{n} #{a(n)}"
}

__END__
1 1
2 2
3 4
4 13
5 6
6 15
7 12
8 18
9 28
10 24
11 36
12 32
13 30
14 42
15 78
16 64
17 72
18 100
19 128
20 60
21 84
22 96
23 150
24 126
25 160
26 120
27 204
28 315
29 168
30 192
31 306
32 180
33 210
34 240
35 252
36 330
