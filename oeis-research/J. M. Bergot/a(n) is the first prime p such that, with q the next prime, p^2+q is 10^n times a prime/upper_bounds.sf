#!/usr/bin/ruby

# a(n) is the first prime p such that, with q the next prime, p^2+q is 10^n times a prime.
# https://oeis.org/A352803

# Prime differences for known terms (q-p):
#    8, 18, 20, 30, 38, 48, 60

# Solutions found with Wolfram|Alpha for input:
#
#   p^2 + p + c = t * 10^n
#
# where c is replaced with {8, 18, 20, 30, 38, 48, 60}.

# Best-upperbounds:
#   a(10) <= 17012632873031
#   a(11) <= 43502632873031
#   a(12) <= 2322601810486343
#   a(13) <= 5470654702304929
#   a(14) <= 499370295105527413

# Upper-bounds:
#   a(9)  <= 35960850223
#   a(9)  <= 7144810486343
#   a(9)  <= 20233263759151
#   a(9)  <= 94691632873031
#   a(9)  <= 8061025296521
#   a(9)  <= 6719519625353

#   a(10) <= 88324702304929
#   a(10) <= 24331810486343
#   a(10) <= 848624923769461
#   a(10) <= 1024605105527413
#   a(10) <= 272264093616419
#   a(10) <= 21885105527413
#   a(10) <= 17012632873031
#   a(10) <= 83444923769461
#   a(10) <= 42580263759151
#   a(10) <= 395774960850223
#   a(10) <= 1071058156502549
#   a(10) <= 328182423635659
#   a(10) <= 1234923502662611
#   a(10) <= 43435550071763
#   a(10) <= 83385105527413

#   a(11) <= 111302632873031
#   a(11) <= 215102632873031
#   a(11) <= 43502632873031
#   a(11) <= 916954702304929
#   a(11) <= 214995105527413
#   a(11) <= 10515070263759151
#   a(11) <= 1350284960850223
#   a(11) <= 5437694093616419
#   a(11) <= 5483701810486343
#   a(11) <= 1111302025296521
#   a(11) <= 3497456519625353
#   a(11) <= 535334923769461

#   a(12) <= 85944370263759151
#   a(12) <= 3734984960850223
#   a(12) <= 63859002025296521
#   a(12) <= 11684756519625353
#   a(12) <= 8845994093616419
#   a(12) <= 6761234923769461
#   a(12) <= 4079295105527413
#   a(12) <= 6598202632873031
#   a(12) <= 2322601810486343
#   a(12) <= 35119654702304929

#   a(13) <= 72291601810486343
#   a(13) <= 148939202632873031
#   a(13) <= 30860295105527413
#   a(13) <= 159764234923769461
#   a(13) <= 5470654702304929
#   a(13) <= 428656994093616419
#   a(13) <= 7451984960850223
#   a(13) <= 83823370263759151
#   a(13) <= 146975756519625353
#   a(13) <= 80128002025296521

#   a(14) <= 1260254234923769461
#   a(14) <= 499370295105527413
#   a(14) <= 1207953370263759151
#   a(14) <= 2325580654702304929

var expr = "

p = 10000000000 n + 2632873031
t = 10000000000 n^2 + 5265746063 n + 693202040 and n element Z

"

var (p1, p2, t1, _, t2, t3) = expr.scan(/(\d+)/).map{.to_i}...
say [p1, p2, t1, t2, t3]

var seen = Set()

for n in (0..10000000) {

    var p = (p1*n + p2)
    #var t = (t1*n*n + t2*n + t3)
    var t = (p*p + p.next_prime).remdiv(10)

    if (p.is_prime && t.is_prime) {
        #say [n, p, t, p**2 + next_prime(p) -> factor]
        var t = (p*p + p.next_prime)
        var v = valuation(t, 10)

        if (!seen.has(v) && is_prime(t / 10**v)) {
            seen << v
            say "a(#{v}) <= #{p}"
        }
    }
}

__END__

p = 1000000000000 n + 370263759151,
t = 1000000000000 n^2 + 740527518303 n + 137095251341, n element Z

p = 100000000000 n + 70263759151,
t = 100000000000 n^2 + 140527518303 n + 49369958501, n element Z

p = 10000000000 n + 4960850223,
t = 10000000000 n^2 + 9921700447 n + 2461003494, n element Z

p = 10000000000 n + 263759151,
t = 10000000000 n^2 + 527518303 n + 6956889, n element Z

p = 10000000000 n + 4093616419,
t = 10000000000 n^2 + 8187232839 n + 1675769539, n element Z

p = 10000000000 n + 5105527413,
t = 10000000000 n^2 + 10211054827 n + 2606641017, n element Z

p = 10000000000 n + 1810486343,
t = 10000000000 n^2 + 3620972687 n + 327786080, n element Z

p = 10000000000 n + 2632873031,
t = 10000000000 n^2 + 5265746063 n + 693202040, n element Z

p = 10000000000 n + 4923769461,
t = 10000000000 n^2 + 9847538923 n + 2424350571, n element Z
