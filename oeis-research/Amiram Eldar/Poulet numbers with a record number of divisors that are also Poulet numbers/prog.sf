#!/usr/bin/ruby

# Poulet numbers with a record number of divisors that are also Poulet numbers
# https://oeis.org/A300327

# New terms:
#   341, 13981, 126217, 294409, 2113665, 4670029, 127479097, 140996401, 509033161, 8600780461, 42625846021, 220411358713, 2382784226641, 11361630988981, 56308742593741, 431283945022021, 434124350060401, 2056455209005561, 5598600634063801, 8178192276975721, 30687765301237681, 78576507360932581, 589876107753613681, 3233304308475201961, 5554485519524020261

# Data terms:
#   341, 13981, 126217, 294409, 2113665, 4670029, 127479097, 140996401, 509033161, 8600780461, 42625846021, 220411358713, 2382784226641, 11361630988981, 56308742593741, 431283945022021, 434124350060401, 2056455209005561, 5598600634063801, 8178192276975721

#`(

# Command used to generate the terms:

zstdcat psps-below-2-to-64.txt.zst | perl -Mntheory=:all -E 'my $max = 0; while(<>) { chomp; my $count = grep { is_pseudoprime($_) && !is_prime($_) } divisors($_); if ($count > $max) { say $_; $max = $count } }'

)
