#!/usr/bin/ruby

# Least number k such that there are exactly n cubefull numbers between k^3 and (k+1)^3.
# https://oeis.org/A337737

# Known terms:
#    1, 2, 6, 15, 12, 25, 43, 73, 480, 1981, 3205, 9038, 16099, 376340, 211318, 2461230, 2253517

func a(n, max_k) {

    var arr = powerful(max_k**3, 3)

    arr.each_kv {|i,k|

        if (k.is_cube) {

            var j = arr.bindex((k.icbrt+1)**3)

            if (j - i - 1 == n) {
                return k.cbrt
            }
        }
    }
}

for n in (0..11) {
    say [n, a(n, 1e4)]
}

say [12, a(12, 1e5)]

# Search for a(17):
# It is known (due to David A. Corneth) that a(17) > 1e7.
# say a(17, 2e7)    # requires lots of RAM
