#!/usr/bin/ruby

# Smallest index k such that the k-th prime number in base-2 contains the n-th Fibonacci number in base-2 as a contiguous substring.
# https://oeis.org/A377270

# First few terms:
#   1, 1, 1, 2, 3, 7, 6, 14, 33, 48, 24, 106, 51, 240, 362, 305, 251, 1269, 1047, 1752, 2456, 3773, 3121, 8959, 39089, 62223, 33299, 177305, 42613, 238782, 373418, 699763, 916051, 2715933, 2256419, 13103923, 7100513, 16902825, 13833549, 11323041, 66402079, 54299882, 23023556, 70119077, 492321021, 380001098, 143130479, 1648832369, 2613823500, 2133658554, 1741848236, 15831100274, 40091416864, 26322487783, 138030546497, 66469224621, 54197979432, 328028694337, 296174953343, 425417626322, 346697671819, 282559512684, 878373436332, 2613018189687, 2227723335301, 13593641042347, 5835162131206, 34569944961729, 55146145940416, 44893130456853, 71621788288857, 114286704720980, 56559008581760, 148456457122250, 845546200938376

for n in (1..100) {
    var bin = n.fib.as_bin
    var min = Inf
    for k in (0..Inf) {
        ['0','1'].variations_with_repetition(k, {|*a|
            [a..., bin].variations(a.len+1, {|*t|
                var m = Num(t.join, 2)
                if (m.is_prime && m.as_bin.contains(bin)) {
                    min = m if (m < min)
                }
            })
        })
        break if (min < Inf)
    }
    print(min.primepi, ", ")
} # ~~~~

__END__
[1, 1, 1, 2, 3, 7, 6, 14, 33, 48, 24, 106, 51, 240, 362, 305, 251, 1269, 1047, 1752, 2456, 3773, 3121, 8959, 39089, 62223, 33299, 177305, 42613, 238782, 373418, 699763, 916051, 2715933, 2256419, 13103923, 7100513, 16902825, 13833549, 11323041, 66402079, 54299882, 23023556, 70119077, 492321021].each_kv{|k,v|
    say [v.prime.as_bin.index(k+1 -> fib.as_bin)]
}
