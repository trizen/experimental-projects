#!/usr/bin/ruby

# Numbers that are simultaneously k-gonal and k-gonal pyramidal for some k >= 3.
# https://oeis.org/A373711

var limit = 1e10
var terms = [1]

for k in (3..Inf) {

    say "\nFinding solutions for k = #{k}"

    var found_solutions = 0

    for m in (2..Inf) {

        # TODO

        #var n = (((1 + Quadratic(0, 1, -3)) * ((-3)*k**2 + 21*k - 39))/(3 * 2**(2/3) * (k - 2) * ((81*k**3 * m**2) - (81*k**3 * m) - (486*k**2 * m**2 + 648*k**2 * m) - 27*k**2 + sqrt(4 * ((-3)*k**2 + 21*k - 39)**3 + (81*k**3 * (m**2 - 81*k**3 * m) - (486*k**2 * m**2) + (648*k**2 * m) - 27*k**2 + (972*k * m**2) - (1620*k*m) + 189*k - 648*m**2 + 1296*m - 324)**2) + 972*k*m**2 - 1620*k*m + 189*k - 648*m**2 + 1296*m - 324)**(1/3)) - ((1 - Quadratic(0, 1, -3)) * ((81*k**3 * m**2) - (81*k**3 * m) - (486*k**2 * m**2) + (648 * k**2 * m) - (27 * k**2) + sqrt(4 * (-3 * k**2 + 21*k - 39)**3 + ((81 * k**3 * m**2) - (81 * k**3 * m) - (486 * k**2 * m**2) + (648 * k**2 * m) - (27 * k**2) + (972 * k * m**2) - (1620*k*m) + (189*k) - (648*m**2) + 1296*m - 324)**2) + 972*k*m**2 - 1620*k*m + 189*k - 648*m**2 + 1296*m - 324)**(1/3))/(6 * 2**(1/3) * (k - 2)) - 1/(k - 2))

        var t1 = (4*((-3)*k**2 + 21*k - 39)**3 + ((81*k**3 * (m**2 - 81*k**3 * m)) - (486*k**2 * m**2) + (648*k**2 * m) - 27*k**2 + (972*k * m**2) - (1620*k*m) + 189*k - 648*m**2 + 1296*m - 324)**2)
        var t2 = (4*(-3 * k**2 + 21*k - 39)**3 + ((81 * k**3 * m**2) - (81 * k**3 * m) - (486 * k**2 * m**2) + (648 * k**2 * m) - (27 * k**2) + (972 * k * m**2) - (1620*k*m) + (189*k) - (648*m**2) + 1296*m - 324)**2)

        if (t1.is_square && t2.is_square) {

        var n = (((1 + sqrt(-3)) * ((-3)*k**2 + 21*k - 39))/(3 * 2**(2/3) * (k - 2) * ((81*k**3 * m**2) - (81*k**3 * m) - (486*k**2 * m**2 + 648*k**2 * m) - 27*k**2 + isqrt(t1) + 972*k*m**2 - 1620*k*m + 189*k - 648*m**2 + 1296*m - 324)**(1/3)) - ((1 - sqrt(-3)) * ((81*k**3 * m**2) - (81*k**3 * m) - (486*k**2 * m**2) + (648 * k**2 * m) - (27 * k**2) + isqrt(t2) + 972*k*m**2 - 1620*k*m + 189*k - 648*m**2 + 1296*m - 324)**(1/3))/(6 * 2**(1/3) * (k - 2)) - 1/(k - 2))

        say n.to_n

        }

        #~ if (s.is_square) {

            #~ var m = ((isqrt(s) + k - 3) / (2*(k-1)))

            #~ if (m.is_int) {
                #~ say [n, m, polygonal(n, k)]
                #~ ++found_solutions
                #~ terms << polygonal(n, k)
            #~ }
        #~ }

        #break if (polygonal(n, k) >= limit)
        break if (pyramidal(m, k) >= limit)
    }

    break if (found_solutions == 0)
}

say "\nTerms <= #{limit}:"
say terms.sort

__END__

k - 2!=0, n = ((1 + i sqrt(3)) (-3 k^2 + 21 k - 39))/(3 2^(2/3) (k - 2) (81 k^3 m^2 - 81 k^3 m - 486 k^2 m^2 + 648 k^2 m - 27 k^2 + sqrt(4 (-3 k^2 + 21 k - 39)^3 + (81 k^3 m^2 - 81 k^3 m - 486 k^2 m^2 + 648 k^2 m - 27 k^2 + 972 k m^2 - 1620 k m + 189 k - 648 m^2 + 1296 m - 324)^2) + 972 k m^2 - 1620 k m + 189 k - 648 m^2 + 1296 m - 324)^(1/3)) - ((1 - i sqrt(3)) (81 k^3 m^2 - 81 k^3 m - 486 k^2 m^2 + 648 k^2 m - 27 k^2 + sqrt(4 (-3 k^2 + 21 k - 39)^3 + (81 k^3 m^2 - 81 k^3 m - 486 k^2 m^2 + 648 k^2 m - 27 k^2 + 972 k m^2 - 1620 k m + 189 k - 648 m^2 + 1296 m - 324)^2) + 972 k m^2 - 1620 k m + 189 k - 648 m^2 + 1296 m - 324)^(1/3))/(6 2^(1/3) (k - 2)) - 1/(k - 2)

k - 2!=0, n = ((1 - i sqrt(3)) (-3 k^2 + 21 k - 39))/(3 2^(2/3) (k - 2) (81 k^3 m^2 - 81 k^3 m - 486 k^2 m^2 + 648 k^2 m - 27 k^2 + sqrt(4 (-3 k^2 + 21 k - 39)^3 + (81 k^3 m^2 - 81 k^3 m - 486 k^2 m^2 + 648 k^2 m - 27 k^2 + 972 k m^2 - 1620 k m + 189 k - 648 m^2 + 1296 m - 324)^2) + 972 k m^2 - 1620 k m + 189 k - 648 m^2 + 1296 m - 324)^(1/3)) - ((1 + i sqrt(3)) (81 k^3 m^2 - 81 k^3 m - 486 k^2 m^2 + 648 k^2 m - 27 k^2 + sqrt(4 (-3 k^2 + 21 k - 39)^3 + (81 k^3 m^2 - 81 k^3 m - 486 k^2 m^2 + 648 k^2 m - 27 k^2 + 972 k m^2 - 1620 k m + 189 k - 648 m^2 + 1296 m - 324)^2) + 972 k m^2 - 1620 k m + 189 k - 648 m^2 + 1296 m - 324)^(1/3))/(6 2^(1/3) (k - 2)) - 1/(k - 2)
