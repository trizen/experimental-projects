#!/usr/bin/ruby

# a(n) is the least positive integer not already in the sequence with the property that the concatenation a(0)a(1)...a(n) forms an integer with n distinct prime factors.
# https://oeis.org/A366896

# Known terms:
#   1, 3, 4, 2, 11, 21, 30, 216, 118, 170, 1092, 8484, 97104, 96720, 493170

# New terms:
#   a(15) = 251496
#   a(16) = 1380652
#   a(17) = 12137510

func a(arr) {

    var root = arr.join
    var n = arr.len

    for k in (1..Inf) {
        #say "Testing: #{k}"
        if (Num(root + k).is_omega_prime(n)) {
            if (!arr.contains(k)) {
                #die "Found: a(#{n}) = #{k}"
                return k
            }
        }
    }
}

var arr = [1]

loop {

    var k = a(arr)
    arr << k
    say arr
}

__END__
[1, 3]
[1, 3, 4]
[1, 3, 4, 2]
[1, 3, 4, 2, 11]
[1, 3, 4, 2, 11, 21]
[1, 3, 4, 2, 11, 21, 30]
[1, 3, 4, 2, 11, 21, 30, 216]
[1, 3, 4, 2, 11, 21, 30, 216, 118]
[1, 3, 4, 2, 11, 21, 30, 216, 118, 170]
[1, 3, 4, 2, 11, 21, 30, 216, 118, 170, 1092]
[1, 3, 4, 2, 11, 21, 30, 216, 118, 170, 1092, 8484]
[1, 3, 4, 2, 11, 21, 30, 216, 118, 170, 1092, 8484, 97104]
