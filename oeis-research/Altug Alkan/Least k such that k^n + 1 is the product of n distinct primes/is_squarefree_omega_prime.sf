#!/usr/bin/ruby

# Least k such that k^n + 1 is the product of n distinct primes (k > 0).
# https://oeis.org/A281940

# Known terms:
#   1, 3, 9, 43, 46, 47, 245, 1697, 109, 565, 3938, 3255, 30089, 18951, 2217

# Lower-bounds:
#   a(16) > 1136859

func a(n, from = 1) {
    for k in (from..Inf) {

        # Already checked the primes below this bound
        if ((n == 16) && (k <= 1471819) && (k.is_prime)) {
            next
        }

        var t = (k**n + 1)
        say "[#{n}] Checking: #{k} -> #{t}"
        #if (t.is_squarefree_almost_prime(n)) {
        if (t.is_prob_squarefree(1e6) && t.is_almost_prime(n) && t.is_squarefree) {
            return k
        }
    }
}

var n = 16
var from = 1136859

say "a(#{n}) = #{a(n, from)}"
