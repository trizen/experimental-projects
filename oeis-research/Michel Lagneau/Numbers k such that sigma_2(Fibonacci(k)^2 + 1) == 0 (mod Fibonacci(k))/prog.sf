#!/usr/bin/ruby

# Numbers k such that sigma_2(Fibonacci(k)^2 + 1) == 0 (mod Fibonacci(k)).
# https://oeis.org/A360107

# Known terms:
#   1, 2, 3, 5, 7, 9, 11, 13, 15, 19, 21, 25, 27, 31, 41, 45, 49, 81, 85, 129, 133, 135, 139

# New terms:
#   357, 361, 429, 431, 433, 435, 447, 451, 507, 511, 567, 569, 571, 573,

include("../../../factordb/auto.sf")

func isok(k) {
    sigma(k.fib**2 + 1, 2) % k.fib == 0
}

var from = 1

for k in (from .. 1e6) {
    #~ say "Checking: #{k}"

    #~ if (isok(k)) {
        #~ say "Found term: #{k}"
        #~ if (k > from) {
            #~ die "New term found: #{k}"
        #~ }
    #~ }

    if (isok(k)) {
        print(k, ", ")
    }
}
