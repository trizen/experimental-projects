#!/usr/bin/ruby

# Least starting prime of exactly n consecutive primes p_i (i = 1..n) such that omega(p_i + 1) = 1 + i.
# https://oeis.org/A373533

# Known terms:
#   5, 23, 499, 13093, 501343, 162598021, 25296334003

# Lower-bounds:
#   a(8) > 786613953091     (computed with this program)
#   a(8) > 21286545113742

func a(n) {

    var lo = 1
    var hi = 2*lo

    loop {

        say "Sieving range: #{[lo, hi]}"

        (n+1).omega_primes(lo, hi).each {|k|
            if (is_prime(k.dec) && is_omega_prime(prev_prime(k.dec).inc, n)) {
                if (n.prev_primes(k).map_kv {|k,v| [n - k + 1, v.inc] }.all { is_omega_prime(.tail, .head) }) {
                    return n.prev_primes(k).last
                }
            }
        }

        lo = hi+1
        hi = int(1.5*lo)
    }
}

for n in (8..100) {
    say "a(#{n}) = #{a(n)}"
}

__END__
a(4) = 13093
a(5) = 501343
a(6) = 162598021
a(7) = 25296334003
