#!/usr/bin/ruby

# Generate upper-bounds using perfect numbers.
# Based on observations made by Naohiro Nomoto in A212490.

var arr = [6, 28, 496, 8128, 33550336, 8589869056, 137438691328, 2305843008139952128, 2658455991569831744654692615953842176, 191561942608236107294793378084303638130997321548169216]

arr.map_reduce{|a,b|
    a*b
}.map_kv {|k,v|
    2**k * v
}.each {|k|
    say [k, k.divisors.count { .sigma*_ == k }]
}

# Conjecture: a(n) <= 2^(n-1) * Product_{k=1..n} A000396(k). - ~~~~

__END__
[6, 1]
[336, 2]
[333312, 3]
[5418319872, 4]
[363572904522153984, 5]
[6246087284309785947257438208, 6]
[1716908124551996896669734276042690920448, 7]
[7917841189233800244470292555938612387093638081493952626688, 8]
[42098464699633996436738392889596794579275402420816550424124454331379625998266285226801995186176, 9]
[16128927357372282677270683252783400684640975204788004768166768161435682429531363765100340934942223871464926298569266067113819614280768245875743916032, 10]
[424643575540140281785722027877258477559536549953678706715629657225433464284690693878614748688072879425099702426979739092216883432271990516971873105107536741613481873189079858924431026907599422962497703326297096192, 11]
